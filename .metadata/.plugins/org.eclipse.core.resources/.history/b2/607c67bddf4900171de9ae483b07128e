import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;


public class VirtualPetShelter {
	
	String roster; // stores the names of the pets available
	int numberOfPets; // stores the number of pets 
	int totalNumberOfPets; // stores the number of pets after intakes/ adoption
 	
	static Map<String, <VirtualPet>> vPets = new HashMap<String, <VirtualPet>>();
	vPets.put("key1", "a  ");
	vPets.put("key2", " b ");
	vPets.put("key3", "  c");

	
	Collection<String,<String>> roster = vPets.roster();
		
	
	public static int giveFood() {
	    this.hunger = hunger + 4;
	        if (this.hunger >= 10){
	        	this.hunger = 10;
	        	
	        } 
	        this.thirst = thirst - 1;   
	        return hunger;
	    }
	   
	    public int giveWater() {
	        this.thirst = thirst + 2;
	        if (this.thirst >= 10){
	       	  	this.thirst = 10;
	       	  	
	        }
	        
	        return thirst;
	    }
	    
	    public int reduceBore() {
	    	this.boredom = boredom - 3;  
	    	
	    	if (this.boredom <= 0){
	    		this.boredom = 0;
	       	 
	     }
	    	return this.boredom;
	     }
	    
	     void tick() {
	    	
	    	this.hunger = hunger + 5;
	    	this.thirst = thirst - 2;
	    
	    	return;
	    }

	
//	int[] petValues = new int[5];
//	int numberOfPets = petValues.length;
//	System.out.println(numberOfPets); 
      
	   
	
// additional attributes of pets who reside at the shelter
	
/*
	ArrayList<String> shelterPets = new ArrayList<String>();
	//	public VirtualPetShelter
	  
		shelterPets.add("Smelly");
        shelterPets.add("Sparky");
        shelterPets.add("Fluffy");
        shelterPets.add("");
      
public int adopt;
    public int dropoff;
    public int koalasLeft;
    public int totalKoala;
       
 // constructor 
    VirtualPetShelter(int adopt,int dropoff) {
	        this.adopt = adopt;
	        this.dropoff= dropoff;
	              
	    }
//allow adoption of a homeless pet
     public int adoptaKoala() {
    	 koalasLeft = totalKoala - 1;
    	 
    	 return koalasLeft;
    	 
     } //closing for adoptaKoala
 
// allow drop off of a homeless pet     
     public int dropaKoala() {
    	 
    	 koalasLeft = totalKoala + 1 ;
    	 return koalasLeft;
    	 
     }//closing dropaKoala

   */
//	}// closing for class VirtualPetShelter     

 

	
	//return of Collection of all the pets in the shelter	   
   //Collection<VirtualPet> dogs = VirtualPet.); // create collection
	
  

       
    //   Collection<ArrayList<String>> values = hussainF.values(); // create collection
	//	 System.out.println(values);// print all items
       
    //   System.out.println(VirtualPet.values);// print all items

	//Set<String> keys = vPets.keySet();
	
	public void intakePet(VirtualPet v) {
		vPets.put(v.name, v);
		
	}
	
	public void adoptPet(VirtualPet v) {
		vPets.remove(v.name, v);
		
	}	
	
	public void display(VirtualPet v){
		
	
	
	System.out.println(vPets.get(v.name));
	
}
	/*
	public void showObj(VirtualPet v){
	  
	     for (String key:keys) {
	         System.out.println(key + "->" + vPets.get(key));
	
	     } 
	
	} */


}
	  
